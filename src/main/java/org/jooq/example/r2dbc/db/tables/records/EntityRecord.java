/*
 * This file is generated by jOOQ.
 */
package org.jooq.example.r2dbc.db.tables.records;


import org.jooq.Record1;
import org.jooq.example.r2dbc.db.tables.Entity;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityRecord extends UpdatableRecordImpl<EntityRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>test_schema.entity.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test_schema.entity.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test_schema.entity.deleted_tinyint</code>.
     */
    public void setDeletedTinyint(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>test_schema.entity.deleted_tinyint</code>.
     */
    public Byte getDeletedTinyint() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>test_schema.entity.deleted_bit</code>.
     */
    public void setDeletedBit(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>test_schema.entity.deleted_bit</code>.
     */
    public Boolean getDeletedBit() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityRecord
     */
    public EntityRecord() {
        super(Entity.ENTITY);
    }

    /**
     * Create a detached, initialised EntityRecord
     */
    public EntityRecord(Integer id, Byte deletedTinyint, Boolean deletedBit) {
        super(Entity.ENTITY);

        setId(id);
        setDeletedTinyint(deletedTinyint);
        setDeletedBit(deletedBit);
        resetChangedOnNotNull();
    }
}
